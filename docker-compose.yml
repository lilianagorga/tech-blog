services:
  #PHP Service
  php:
    build:
      context: .
      target: php
      args:
        - APP_ENV=${APP_ENV}
    environment:
      - APP_ENV=${APP_ENV}
      - CONTAINER_ROLE=app
      - XDEBUG_MODE=debug
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./Docker/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    ports:
      - 8000:8000
    depends_on:
      - database
      - redis
    entrypoint:
      - Docker/entrypoint.sh
    labels:
      - "XDEBUG_CONFIG=remote_host=host.docker.internal remote_port=9000"

  # Database Server
  database:
    image: mysql:8.0
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 3306:3306
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_HOST=${DB_HOST}
      - MYSQL_ROOT_HOST=${DB_HOST}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
      - ./Docker/my.cnf:/etc/mysql/my.cnf

  #Redis Server
  redis:
    image: redis:alpine
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
    ports:
      - 6379:6379

  #Queue Server
  queue:
    build:
      context: .
      target: php
      args:
        - APP_ENV=${APP_ENV}
    environment:
      - APP_ENV=${APP_ENV}
      - CONTAINER_ROLE=queue
    working_dir: /var/www
    volumes:
      - ./:/var/www


  #Node
  node:
    build:
      context: .
      target: node
    volumes:
      - .:/usr/src
      - ./node_modules:/usr/src/node_modules
    tty: true

networks:
  default:
    driver: bridge

volumes:
  db-data: ~
